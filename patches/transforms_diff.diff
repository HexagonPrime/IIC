diff --git a/code/utils/cluster/transforms.py b/code/utils/cluster/transforms.py
index 7179e70..53157cc 100644
--- a/code/utils/cluster/transforms.py
+++ b/code/utils/cluster/transforms.py
@@ -113,12 +113,22 @@ def sobel_make_transforms(config, random_affine=False,
   tf2_list = []
   tf3_list = []
   if config.crop_orig:
-    tf1_list += [
-      torchvision.transforms.RandomCrop(tuple(np.array([config.rand_crop_sz,
-                                                        config.rand_crop_sz]))),
-      torchvision.transforms.Resize(tuple(np.array([config.input_sz,
-                                                    config.input_sz]))),
-    ]
+    if not config.center_crop_x:
+      print ('random crop x')
+      tf1_list += [
+        torchvision.transforms.RandomCrop(tuple(np.array([config.rand_crop_sz,
+                                                          config.rand_crop_sz]))),
+        torchvision.transforms.Resize(tuple(np.array([config.input_sz,
+                                                      config.input_sz]))),
+      ]
+    else:
+      print ('center crop x')
+      tf1_list += [
+        torchvision.transforms.CenterCrop(tuple(np.array([config.rand_crop_sz,
+                                                          config.rand_crop_sz]))),
+        torchvision.transforms.Resize(tuple(np.array([config.input_sz,
+                                                      config.input_sz]))),
+      ]
     tf3_list += [
       torchvision.transforms.CenterCrop(tuple(np.array([config.rand_crop_sz,
                                                         config.rand_crop_sz]))),
@@ -143,11 +153,16 @@ def sobel_make_transforms(config, random_affine=False,
       print("adding crop size option for imgs_tf: %d" % crop_sz)
       imgs_tf_crops.append(torchvision.transforms.RandomCrop(crop_sz))
     tf2_list += [torchvision.transforms.RandomChoice(imgs_tf_crops)]
-  else:
-    # default
+  elif config.rand_crop_x_prime:
+    print ('include random crop in transformation g')
     tf2_list += [
       torchvision.transforms.RandomCrop(tuple(np.array([config.rand_crop_sz,
                                                         config.rand_crop_sz])))]
+  elif config.center_crop_x_prime:
+    print ('include center crop in transformation g')
+    tf2_list += [
+      torchvision.transforms.CenterCrop(tuple(np.array([config.rand_crop_sz,
+                                                        config.rand_crop_sz])))]
 
   if random_affine:
     print("adding affine with p %f" % affine_p)
@@ -180,14 +195,15 @@ def sobel_make_transforms(config, random_affine=False,
     )
   else:
     print("not using cutout")
-
-  tf2_list += [
-    torchvision.transforms.Resize(tuple(np.array([config.input_sz,
-                                                  config.input_sz]))),
-    torchvision.transforms.RandomHorizontalFlip(),
-    torchvision.transforms.ColorJitter(brightness=0.4, contrast=0.4,
-                                       saturation=0.4, hue=0.125)
-  ]
+  if not config.remove_g:
+    print ("add transformation g")
+    tf2_list += [
+      torchvision.transforms.Resize(tuple(np.array([config.input_sz,
+                                                    config.input_sz]))),
+      torchvision.transforms.RandomHorizontalFlip(),
+      torchvision.transforms.ColorJitter(brightness=0.4, contrast=0.4,
+                                         saturation=0.4, hue=0.125)
+    ]
 
   tf2_list.append(custom_greyscale_to_tensor(config.include_rgb))
 
